apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "registry.fullname" . }}
  labels:
    name: {{ template "registry.fullname" . }}
    app: {{ template "name" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.registry.replicas }}
  selector:
    matchLabels:
      name: {{ template "registry.fullname" . }}
  template:
    metadata:
      labels:
        name: {{ template "registry.fullname" . }}
        release: {{ .Release.Name }}
    spec:
      containers:
        - name: {{ template "registry.fullname" . }}
          image: "{{ .Values.registry.image.repository }}:{{ .Values.registry.image.tag }}"
          imagePullPolicy: {{ .Values.registry.image.pullPolicy }}
          command: ["/bin/sh"]
          args: ["-c", "update-ca-certificates;registry serve /etc/docker/registry/config.yml"]
          ports:
            - containerPort: {{ .Values.registry.service.port }}
            - containerPort: {{ .Values.registry.service.debugPort }}
          env:
            - name: REGISTRY_AUTH_SILLY_REALM
              valueFrom:
                configMapKeyRef:
                  name: {{ template "registry.fullname" . }}
                  key: REGISTRY_AUTH_SILLY_REALM
            - name: REGISTRY_AUTH_SILLY_SERVICE
              valueFrom:
                configMapKeyRef:
                  name: {{ template "registry.fullname" . }}
                  key: REGISTRY_AUTH_SILLY_SERVICE
            - name: REGISTRY_NOTIFICATIONS_ENDPOINTS
              valueFrom:
                configMapKeyRef:
                  name: {{ template "registry.fullname" . }}
                  key: REGISTRY_NOTIFICATIONS_ENDPOINTS
          volumeMounts:
            - mountPath: /etc/ssl/certs
              name: cacerts
              readOnly: true
            - mountPath: /etc/pki
              name: pki
              readOnly: true
            - name: config
              mountPath: /etc/docker/registry
              readOnly: true
            - name: storage
              mountPath: {{ .Values.registry.mountPath }}
      volumes:
        - hostPath:
            path: /etc/ssl/certs
          name: cacerts
        - hostPath:
            path: /etc/pki
          name: pki
        - name: config
          configMap:
            name: {{ template "registry.fullname" . }}
            items:
              - key: config
                path: config.yml
        - name: storage
          {{- if .Values.registry.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ template "registry.fullname" . }}
          {{- else }}
          emptyDir: {}
          {{- end }}
